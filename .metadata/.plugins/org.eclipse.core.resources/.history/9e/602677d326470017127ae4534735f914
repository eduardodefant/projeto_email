package br.edu.unisep.projetoemail;

import java.util.Properties;

import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Store;

import br.edu.unisep.fx.controller.GenericController;
import br.edu.unisep.projetoemail.vo.ReceberEmailVO;
import br.edu.unisep.utils.MsgUtils;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.text.Text;

public class EmailPrincipalController extends GenericController {

	@FXML
	private Button btnNovoEmail;

	@FXML
	private Button btnReceberEmails;

	@FXML
	private Button btnNovoContato;

	@FXML
	private Text txtEmailAtual;

	@FXML
	private TableColumn<ReceberEmailVO, String> nome;

	@FXML
	private TableColumn<ReceberEmailVO, String> assunto;

	@FXML
	private TableView<ReceberEmailVO> listaEmails;

	@FXML

	private ObservableList<ReceberEmailVO> dadosEmailRecebido;

	@Override
	protected void onControllerStart() {

		this.dadosEmailRecebido = FXCollections.observableArrayList();
		receberEmail();
		this.nome.setCellValueFactory(new PropertyValueFactory<>("nome"));
		this.assunto.setCellValueFactory(new PropertyValueFactory<>("assunto"));
		listaEmails.setItems(dadosEmailRecebido);
	}

	public void novoContato(ActionEvent event) {
		openModal("NovoContato.fxml");
	}

	public void enviarEmail(ActionEvent event) {
		openModal("NovoEmail.fxml");
	}

	public void atualizarEmails(ActionEvent event) {
		receberEmail();
	}

	public void receberEmail() {
		Properties props = new Properties();

		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.socketFactory.port", "465");
		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.port", "465");

		Session session = Session.getDefaultInstance(props, new javax.mail.Authenticator() {
		});

		try {
			Store store = session.getStore("imaps");
			store.connect("imap.gmail.com", "projetoemailroberto@gmail.com", "projetoemailroberto2017");
			System.out.println(store);

			Folder inbox = store.getFolder("Inbox");
			inbox.open(Folder.READ_ONLY);
			Message message[] = inbox.getMessages();

			for (int i = 0, n = 10; i < n; i++) {
				ReceberEmailVO email = new ReceberEmailVO();

				email.setNome(message[i].getFrom()[0].toString());
				email.setAssunto(message[i].getSubject().toString());

				dadosEmailRecebido.add(email);
			}

		} catch (ArrayIndexOutOfBoundsException e) {
		} catch (Exception e) {
			MsgUtils.exibirAlerta("Erro ao atualizar caixa de entrada");
		}

	}
}
